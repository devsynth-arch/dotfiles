#!/bin/sh
# =============================================================
# Author:  gh0stzk
# Repo:    https://github.com/gh0stzk/dotfiles
# Date:    03.02.2025 14:22:32
#
# Brightness - Hardware brightness control
# Features:
#   ✔ Brightness adjustments in 5% increments
#   ✔ Configurable minimum of 2% brightness
#   ✔ OSD notifications with graphical progress bar
#
# Dependencies:
#   → brightnessctl
#   → dunst
#
# Copyright (C) 2021-2025 gh0stzk <z0mbi3.zk@protonmail.com>
# Licensed under GPL-3.0 license
# =============================================================

set -euo pipefail

DIR="$HOME/.config/bspwm/config/assets"
BRIGHTNESS_STEPS=5
MIN_BRIGHTNESS=2

# Get current brightness value (raw)
get_brightness_raw() {
    brightnessctl g
}

# Get maximum brightness value (raw)
get_max_brightness_raw() {
    brightnessctl m
}

# Get current brightness as a percentage
get_brightness_percentage() {
    local current_raw
    current_raw=$(get_brightness_raw)
    local max_raw
    max_raw=$(get_max_brightness_raw)
    echo $((current_raw * 100 / max_raw))
}

# Send dunst notification
send_notification() {
    local brightness_percent="$1"
    local icon="$DIR/brightness.svg"
    dunstify "Brightness $brightness_percent%" -i "$icon" -r 5555 -h int:value:"$brightness_percent"
}

# Adjust brightness
adjust_brightness() {
    local direction="$1"
    local current_percent
    current_percent=$(get_brightness_percentage)
    local max_raw
    max_raw=$(get_max_brightness_raw)
    local new_percent

    case "$direction" in
        up)
            new_percent=$((current_percent + BRIGHTNESS_STEPS))
            if [ "$new_percent" -gt 100 ]; then
                new_percent=100
            fi
            ;;
        down)
            new_percent=$((current_percent - BRIGHTNESS_STEPS))
            if [ "$new_percent" -lt "$MIN_BRIGHTNESS" ]; then
                new_percent="$MIN_BRIGHTNESS"
            fi
            ;;
        *)
            echo "Usage: $0 [up|down]"
            exit 1
            ;;
    esac

    # Convert percentage back to raw value for brightnessctl
    local new_raw
    new_raw=$((new_percent * max_raw / 100))
    brightnessctl set "$new_raw" -q

    send_notification "$new_percent"
}

# Main execution
adjust_brightness "$1"
